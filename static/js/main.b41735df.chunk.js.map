{"version":3,"sources":["Components/Mode/Mode.js","Components/Player/PlayerInfo.js","Components/Player/PlayerVolume.js","Components/Player/PlayerWave.js","Components/Player/PlayerControl.js","Components/Player/Player.js","Components/Playlist/PlayItem.js","Components/Playlist/Playlist.js","Components/Footer/Footer.js","App.js","Reducer.js","Store.js","index.js"],"names":["Mode","this","props","setIsDarkTheme","className","onClick","SetIsDarkTheme","type","Component","connect","state","ownProps","isDarkTheme","dispatch","PlayerInfo","src","currentSong","image","alt","name","singer","isPlaying","dispatch1","PlayerVolume","index","volumeProgress","value","setVolume","isUp","SetVolume","currentVolume","rootElm","ReactDOM","findDOMNode","querySelector","volumePercent","ChangeVolume","onInput","SetOnInputVolumeProgress","min","max","defaultValue","volume","PlayerWave","AudioContext","window","webkitAudioContext","audio","Audio","path","audioContext","audioContextSrc","createMediaElementSource","audioAnalyser","createAnalyser","canvasContext","canvasElm","getContext","destination","fftSize","barHeight","analyserFrequencyLength","frequencyBinCount","frequencyDataArray","Uint8Array","canvasWidth","offsetWidth","canvasHeight","height","barWidth","barIndex","renderFrame","requestAnimationFrame","getByteFrequencyData","fillStyle","fillRect","i","rgbRed","rgbGreen","prevProps","prevState","renderMusicWave","PlayerControl","setIsPlaying","newIndex","Math","floor","random","lengthOfSongs","currentIndex","setSong","isRepeat","isRandom","SetRandomSong","tempIndex","setRandom","setRepeat","duration","progressPercent","currentTime","progressAudio","seek","parseFloat","toFixed","seekTime","textContent","durationTime","play","SetNextSong","pause","SetOnClickProgressAudio","id","step","onTimeUpdate","SetProgressAudio","onEnded","SetEndedAudio","SetRepeat","SetPrevSong","SetIsplaying","SetRandom","Player","PlayItem","setCurrentSong","isActive","SetCurrentSong","renderSong","song","Playlist","SONGS","map","renderPlayList","Footer","style","textAlign","marginTop","fontSize","fontWeight","letterSpacing","App","MusicPlayerInitialState","length","Reducer","action","Store","require","createStore","subscribe","console","log","JSON","stringify","getState","render","store","document","getElementById"],"mappings":"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","file":"static/js/main.b41735df.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport {connect} from 'react-redux'\r\n\r\nclass Mode extends Component {\r\n\r\n  SetIsDarkTheme(){\r\n    this.props.setIsDarkTheme()\r\n  }\r\n  \r\n  render() {\r\n    return (\r\n      <div className=\"mode\">\r\n        <span className=\"mode-name\">Light Mode:</span>\r\n        <label className=\"mode-switch\">\r\n          <input \r\n            onClick={() => this.SetIsDarkTheme()}\r\n            type=\"checkbox\" className=\"mode-switch__check\" />\r\n          <span className=\"mode-switch__slider\" />\r\n        </label>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  return {      \r\n    isDarkTheme: state.isDarkTheme    \r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n  return {\r\n    setIsDarkTheme: () => {\r\n      dispatch({type: \"SET_ISDARKTHEME\"})\r\n    }    \r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Mode)","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux'\r\n\r\nclass PlayerInfo extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"player-wrapInfo\">\r\n        <div className=\"player-borderImg\">\r\n          <img src={this.props.currentSong.image} alt=\"\" \r\n            className=\"player-image\" />\r\n        </div>\r\n        <div className=\"player-wrapSinger\">\r\n          <h3 className=\"player-songName\">{this.props.currentSong.name}</h3>\r\n          <span className=\"player-singerName\">{this.props.currentSong.singer}</span>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  return {\r\n    currentSong: state.currentSong,\r\n    isPlaying: state.isPlaying\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n  return {\r\n    dispatch1: () => {\r\n      dispatch()\r\n    }\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PlayerInfo)","import React, { Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {connect} from 'react-redux'\r\n\r\nclass PlayerVolume extends Component {\r\n\r\n  SetVolume(index) {    \r\n    this.volumeProgress.value = index\r\n    this.props.setVolume(index)\r\n  }\r\n\r\n  ChangeVolume(index,isUp) {\r\n    if (isUp) {\r\n      (index < 100) && index++;\r\n    }else {\r\n      (index > 0) && index--;\r\n    }\r\n    this.SetVolume(index)\r\n  }\r\n\r\n  SetOnInputVolumeProgress() {    \r\n    let currentVolume = this.volumeProgress.value\r\n    this.SetVolume(currentVolume)\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.rootElm = ReactDOM.findDOMNode(this)\r\n    this.volumeProgress = this.rootElm.querySelector('.player-volume__progress')    \r\n    this.volumePercent = this.rootElm.querySelector('.player-volume__viewPercent')        \r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"player-volume\">\r\n        <div className=\"player-volume__control\">\r\n          <span \r\n            onClick = {() => this.ChangeVolume(this.props.currentVolume,false)}\r\n            className=\"player-volume__down\">➖</span>\r\n          <input \r\n            onInput = {() => this.SetOnInputVolumeProgress()}\r\n            type=\"range\" min={0} max={100} \r\n            defaultValue={100} \r\n            className=\"player-volume__progress\" />\r\n          <span \r\n            onClick = {() => this.ChangeVolume(this.props.currentVolume,true)}\r\n            className=\"player-volume__up\">➕</span>\r\n        </div>\r\n        <span className=\"player-volume__viewPercent\">{`${this.props.currentVolume}%`}</span>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  return {    \r\n    currentVolume: state.currentVolume\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n  return {    \r\n    setVolume: (volume) => {\r\n      dispatch({type: \"SET_VOLUME\",volume})\r\n    }\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PlayerVolume)","import React, { Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {connect} from 'react-redux'\r\n\r\nclass PlayerWave extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    \r\n    var AudioContext = window.AudioContext || window.webkitAudioContext;\r\n    var audio = new Audio(this.props.currentSong.path);\r\n    this.audioContext = new AudioContext();\r\n    this.audioContextSrc = this.audioContext.createMediaElementSource(audio);\r\n  }  \r\n\r\n  renderMusicWave() {    \r\n    var audioAnalyser = this.audioContext.createAnalyser();\r\n    var canvasContext = this.canvasElm.getContext(\"2d\");    \r\n    \r\n    this.audioContextSrc.connect(audioAnalyser);\r\n    audioAnalyser.connect(this.audioContext.destination);\r\n        \r\n    audioAnalyser.fftSize = 256;\r\n    var analyserFrequencyLength = audioAnalyser.frequencyBinCount;\r\n    var frequencyDataArray = new Uint8Array(analyserFrequencyLength);\r\n    // Lấy width và height của canvas\r\n    var canvasWidth = this.canvasElm.offsetWidth;\r\n    var canvasHeight = this.canvasElm.height;\r\n    // Tính toán barWidth và barHeight\r\n    var barWidth = (canvasWidth / analyserFrequencyLength) * 2.5;\r\n    var barHeight;\r\n    var barIndex = 0;\r\n    \r\n    function renderFrame() {        \r\n        window.requestAnimationFrame(renderFrame);\r\n        barIndex = 0;\r\n        audioAnalyser.getByteFrequencyData(frequencyDataArray);\r\n        // Tạo màu nền đối tượng theo sự thay đổi màu nền của theme\r\n        canvasContext.fillStyle = this.props.isDarkTheme ? '#2e2f34' : '#dbe6f8'\r\n        \r\n        canvasContext.fillRect(0, 0, canvasWidth, canvasHeight);\r\n        for (var i = 0; i < analyserFrequencyLength; i++) {\r\n          barHeight = frequencyDataArray[i]+100;\r\n          // Tạo màu cho thanh bar        \r\n          var rgbRed = 30 * (50 * (i / analyserFrequencyLength));\r\n          var rgbGreen = 150 + (i / analyserFrequencyLength);\r\n          var rgbBlue = 80;\r\n          \r\n          // Điền màu và vẽ bar\r\n          canvasContext.fillStyle = \"rgb(\"+ rgbRed +\", \"+ rgbGreen +\", \"+ rgbBlue +\")\";\r\n          canvasContext.fillRect(barIndex, (canvasHeight - barHeight), barWidth, barHeight);\r\n          barIndex += (barWidth + 5);\r\n        }\r\n    }        \r\n    renderFrame();\r\n  }  \r\n\r\n  componentDidMount() {\r\n    this.rootElm = ReactDOM.findDOMNode(this)\r\n    this.canvasElm = this.rootElm.querySelector('.player-wave')    \r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    (this.props.isPlaying) && (this.renderMusicWave())\r\n  }\r\n\r\n  render() {\r\n    return (                  \r\n      <canvas className=\"player-wave\" />             \r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  return {  \r\n    currentSong: state.currentSong,  \r\n    isDarkTheme: state.isDarkTheme,\r\n    isPlaying: state.isPlaying\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n  return {\r\n    setIsPlaying: () => {\r\n      dispatch({type: \"SET_ISPLAYING\"})\r\n    }    \r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PlayerWave)","import React, { Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {connect} from 'react-redux'\r\nimport PlayerVolume from './PlayerVolume';\r\nimport PlayerWave from './PlayerWave';\r\n\r\nclass PlayerControl extends Component { \r\n  \r\n  SetIsplaying() {\r\n    this.props.setIsPlaying()\r\n    // let audio = new Audio(this.props.currentSong.path)\r\n    // console.log(audio)        \r\n  }\r\n\r\n  SetRandomSong() {\r\n    let newIndex\r\n    do {\r\n      newIndex = Math.floor(Math.random() * this.props.lengthOfSongs)\r\n    }while (newIndex === this.props.currentIndex)\r\n    this.props.setSong(newIndex)\r\n  }\r\n\r\n  SetNextSong() {\r\n    if (!this.props.isRepeat) {\r\n      if (!this.props.isRandom) {\r\n        var tempIndex = this.props.currentIndex\r\n        tempIndex++    \r\n        (tempIndex === this.props.lengthOfSongs) && (tempIndex=0);\r\n        this.props.setSong(tempIndex)\r\n      }\r\n      else {\r\n        this.SetRandomSong()\r\n      }\r\n    }\r\n  }\r\n\r\n  SetPrevSong() {\r\n    if (!this.props.isRepeat) {\r\n      if (!this.props.isRandom) {\r\n        var tempIndex = this.props.currentIndex\r\n        tempIndex--\r\n        (tempIndex <0 ) && (tempIndex=this.props.lengthOfSongs-1);\r\n        this.props.setSong(tempIndex)\r\n      }\r\n      else {\r\n        this.SetRandomSong()\r\n      }\r\n    }\r\n  }\r\n\r\n  SetRandom() {\r\n    this.props.setRandom()\r\n  }\r\n\r\n  SetRepeat() {\r\n    this.props.setRepeat()\r\n  }\r\n\r\n  SetProgressAudio() {\r\n    if (this.audio.duration) {\r\n      const progressPercent = Math.floor(this.audio.currentTime/this.audio.duration*100)\r\n      this.progressAudio.value = progressPercent\r\n\r\n      let seek = parseFloat(this.audio.currentTime/60).toFixed(2)\r\n      this.seekTime.textContent = seek\r\n\r\n      let duration = parseFloat(this.audio.duration/60).toFixed(2)\r\n      this.durationTime.textContent = duration\r\n    }\r\n  }\r\n\r\n  SetOnClickProgressAudio() {\r\n    const seekTime = this.progressAudio.value/100 * this.audio.duration\r\n    this.audio.currentTime = seekTime \r\n  } \r\n\r\n  SetEndedAudio(){\r\n    (this.props.isRepeat) ? this.audio.play() : this.SetNextSong()\r\n  }\r\n  \r\n  componentDidMount() {\r\n    this.rootElm = ReactDOM.findDOMNode(this)\r\n    this.audio = this.rootElm.querySelector('#audio')\r\n    this.progressAudio = this.rootElm.querySelector('#player-progress__slider')    \r\n    this.seekTime = this.rootElm.querySelector('.player-progress__time-seek')\r\n    this.durationTime = this.rootElm.querySelector('.player-progress__time-duration')    \r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {        \r\n    (this.props.isPlaying) ? this.audio.play() : this.audio.pause();\r\n    this.audio.volume = this.props.currentVolume/100;\r\n  }\r\n\r\n  render() { \r\n    return (\r\n      <div className=\"player-wrapControl\">\r\n        \r\n        {/* <PlayerWave /> */}\r\n        <PlayerVolume />\r\n\r\n        <div className=\"player-progress\">\r\n          <div className=\"player-progress__time\">\r\n            <label className=\"player-progress__time-seek\"></label>\r\n            <label className=\"player-progress__time-duration\"></label>\r\n          </div>\r\n          <input \r\n            onInput= {()=>this.SetOnClickProgressAudio()}\r\n            type=\"range\" \r\n            id=\"player-progress__slider\" \r\n            className=\"player-progress__slider\" \r\n            defaultValue={0} step={1} min={0} max={100} />\r\n        </div>\r\n\r\n        <audio \r\n          onTimeUpdate = {()=>this.SetProgressAudio()}\r\n          onEnded = {() => this.SetEndedAudio()}\r\n          id=\"audio\" \r\n          src={this.props.currentSong.path} \r\n        />\r\n\r\n        <div className=\"player-control\">\r\n          <div \r\n            onClick = {() => this.SetRepeat()}\r\n            className={`player-control__repeat btn ${this.props.isRepeat && \"btn--active\"}`}>\r\n            <i className=\"fas fa-redo\" />\r\n          </div>\r\n          <div \r\n            onClick = {() => this.SetPrevSong()}\r\n            className=\"player-control__backward btn\">\r\n            <i className=\"fas fa-step-backward\" />\r\n          </div>\r\n          <div \r\n            onClick={() => this.SetIsplaying()}\r\n            className=\"player-control__togglePlay btn\">\r\n            <i className=\"fas fa-pause icon-pause\" />\r\n            <i className=\"fas fa-play icon-play\" />\r\n          </div>\r\n          <div \r\n            onClick = {() => this.SetNextSong()}\r\n            className=\"player-control__forward btn\">\r\n            <i className=\"fas fa-step-forward\" />\r\n          </div>\r\n          <div \r\n            onClick = {() => this.SetRandom()}\r\n            className={`player-control__random btn ${this.props.isRandom && \"btn--active\"}`}>\r\n            <i className=\"fas fa-random\" />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  return {\r\n    currentIndex: state.currentIndex,\r\n    currentSong: state.currentSong,\r\n    currentVolume: state.currentVolume,\r\n    isPlaying: state.isPlaying,    \r\n    isPlaying: state.isPlaying,\r\n    isRandom: state.isRandom,\r\n    isRepeat: state.isRepeat,\r\n    lengthOfSongs: state.lengthOfSongs\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n  return {\r\n    setIsPlaying: () => {\r\n      dispatch({type: \"SET_ISPLAYING\"})\r\n    },\r\n    setSong: (index) => {\r\n      dispatch({type: \"SET_NEXT_PREV_SONG\", index})\r\n    },\r\n    setRandom: () => {\r\n      dispatch({type: \"SET_ISRANDOM\"})\r\n    },\r\n    setRepeat: () => {\r\n      dispatch({type: \"SET_ISREPEAT\"})\r\n    }\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PlayerControl)","import React, { Component } from 'react';\r\nimport PlayerInfo from './PlayerInfo';\r\nimport {connect} from 'react-redux'\r\nimport PlayerControl from './PlayerControl';\r\n\r\nclass Player extends Component {\r\n  render() {\r\n    return (\r\n      <section className={`player ${this.props.isPlaying && 'playing'}`}>\r\n        <h3 className=\"player-heading\">playing now</h3>\r\n\r\n        <PlayerInfo />                \r\n\r\n        <PlayerControl />\r\n\r\n      </section>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  return {\r\n    currentSong: state.currentSong,\r\n    isPlaying: state.isPlaying\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n  return {\r\n    dispatch1: () => {\r\n      dispatch()\r\n    }\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Player)","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nclass PlayItem extends Component {\r\n\r\n  SetCurrentSong() {      \r\n    (this.props.currentIndex !== this.props.index) &&\r\n      this.props.setCurrentSong(this.props.index, this.props);\r\n      \r\n    (!this.props.isPlaying) && this.props.setIsPlaying()\r\n  }\r\n  \r\n  renderSong() {    \r\n    const isActive = (this.props.currentIndex===this.props.index) ? true : false\r\n    return (\r\n      <div \r\n        onClick = {() => this.SetCurrentSong()}\r\n        className={`song ${isActive && \"song--active\"}`}>\r\n        <img src={this.props.image} alt=\"\" className=\"song__thumb\" />\r\n        <div className=\"song__info\">\r\n          <h3 className=\"song__info-name\">{this.props.name}</h3>\r\n          <p className=\"song__info-singer\">{this.props.singer}</p>\r\n        </div>\r\n        <div className=\"song__effect\">\r\n          <div className=\"song__effect-bar\" />                \r\n          <div className=\"song__effect-bar\" />                \r\n          <div className=\"song__effect-bar\" />                \r\n          <div className=\"song__effect-bar\" />                \r\n          <div className=\"song__effect-bar\" />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  componentDidUpdate() {   \r\n    // console.log('Did update');    \r\n    this.renderSong()\r\n  }\r\n\r\n  render() {\r\n    return (      \r\n        this.renderSong()      \r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  return {\r\n    currentIndex: state.currentIndex,\r\n    isPlaying: state.isPlaying\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n  return {\r\n    setIsPlaying: () => {\r\n      dispatch({type: \"SET_ISPLAYING\"})\r\n    },\r\n    setCurrentSong: (index,song) => {\r\n      dispatch({type: \"SET_CURRENT_SONG\", index, song})\r\n    }\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PlayItem)\r\n","import React, { Component } from 'react';\r\nimport SONGS from '../../Data.json'\r\nimport PlayItem from './PlayItem'\r\n\r\nclass Playlist extends Component {\r\n\r\n  renderPlayList() {\r\n    return(\r\n      SONGS.map((song,index) => (\r\n        <PlayItem \r\n          key={index}\r\n          index={index}\r\n          image={song.image}\r\n          name={song.name}\r\n          singer={song.singer}\r\n          path={song.path}\r\n        />\r\n      ))\r\n    )\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <section className=\"playlist\">\r\n        {\r\n          this.renderPlayList()\r\n        }\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\nexport default (Playlist)","import React, { Component } from 'react';\r\n\r\nclass Footer extends Component {\r\n  render() {\r\n    return (\r\n      <footer>\r\n        <p style={{textAlign: 'center', marginTop: '15px', fontSize: '12px', fontWeight: 600, letterSpacing: '1.5px'}}>\r\n          ©Khanh Nghia - Practice for HTML, SCSS, JS - From F8-FullStack\r\n        </p>\r\n      </footer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Footer;","import React, { Component } from 'react';\nimport './App.css';\nimport Mode from './Components/Mode/Mode';\nimport Player from './Components/Player/Player';\nimport Playlist from './Components/Playlist/Playlist';\nimport Footer from './Components/Footer/Footer';\nimport {connect} from 'react-redux'\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <div className={`container ${this.props.isDarkTheme && 'darkMode'}`} >\n          <div className={`app ${this.props.isDarkTheme && 'darkMode'}`}>\n            <Mode />\n            <div className=\"app-wrap\">\n              <Player />\n              <Playlist />\n            </div>\n            <Footer />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {      \n    isDarkTheme: state.isDarkTheme    \n  }\n}\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n  return {\n    setIsDarkTheme: () => {\n      dispatch({type: \"SET_ISDARKTHEME\"})\n    }    \n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App)\n\n","import SONGS from './Data.json'\r\n\r\nconst MusicPlayerInitialState = {\r\n  currentIndex: 0,\r\n  currentSong: SONGS[0],\r\n  currentVolume: 100,\r\n  isPlaying: false,\r\n  isRandom: false,\r\n  isRepeat: false,\r\n  lengthOfSongs: SONGS.length,\r\n  isDarkTheme: false\r\n}\r\n\r\nconst Reducer = (state = MusicPlayerInitialState, action) => {\r\n  switch (action.type) {\r\n    case \"SET_CURRENT_SONG\":      \r\n      return {...state, \r\n        currentIndex: action.index,\r\n        currentSong: action.song\r\n      }\r\n    case \"SET_NEXT_PREV_SONG\":      \r\n      return {...state, \r\n        currentIndex: action.index,\r\n        currentSong: SONGS[action.index]\r\n      }\r\n    case \"SET_ISPLAYING\":      \r\n      return {...state,     \r\n        isPlaying: !state.isPlaying\r\n      }\r\n    case \"SET_ISDARKTHEME\":      \r\n      return {...state,     \r\n        isDarkTheme: !state.isDarkTheme\r\n      }\r\n    case \"SET_ISRANDOM\":      \r\n      return {...state,     \r\n        isRandom: !state.isRandom\r\n      }\r\n    case \"SET_ISREPEAT\":      \r\n      return {...state,     \r\n        isRepeat: !state.isRepeat\r\n      }\r\n    case \"SET_VOLUME\": \r\n      return {...state, \r\n        currentVolume: action.volume\r\n      }   \r\n   \r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default Reducer","import Reducer from \"./Reducer\"\r\n\r\nvar redux = require(\"redux\")\r\nvar Store = redux.createStore(Reducer)\r\nexport default Store\r\n\r\nStore.subscribe(()=> {\r\n  console.log(\r\n    JSON.stringify(Store.getState())\r\n  );  \r\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux'\nimport Store from './Store'\n\n\nReactDOM.render(\n  <Provider store={Store} >\n    <App />\n  </Provider>,\n  \n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}